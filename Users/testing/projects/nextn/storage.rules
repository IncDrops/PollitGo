
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // User profile pictures
    // Path: users/{userId}/profilePicture.jpg (or .png, etc.)
    match /users/{userId}/profilePicture {
      allow read: if true; // Anyone can read profile pictures
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 2 * 1024 * 1024 // Max 2MB
                   && request.resource.contentType.matches('image/.*'); // Only images
    }

    // Poll media (images/videos for polls or options)
    // Path: polls/{pollId}/{fileName}
    // A more granular approach might be needed if options have their own folders.
    match /polls/{pollId}/{fileName} {
      allow read: if true; // Anyone can read poll media
      allow write: if request.auth != null // Only authenticated users can upload
                   && request.resource.size < 10 * 1024 * 1024 // Max 10MB
                   && (request.resource.contentType.matches('image/.*') || request.resource.contentType.matches('video/.*'));
      // To restrict further, you might check if request.auth.uid is the poll creator
      // or if the pollId exists in Firestore and the user has permission.
    }

    // Example: User-specific private data (only owner can read/write)
    // Path: userData/{userId}/{allUserDataPaths=**}
    match /userData/{userId}/{allUserDataPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
